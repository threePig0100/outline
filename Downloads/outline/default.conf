server {
    listen       80;
    server_name  localhost;
    listen 443   ssl;
    ssl_certificate  /etc/ssl/certificate.crt;
    ssl_certificate_key  /etc/ssl/private.key;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        proxy_pass  https://localhost:3000; 
        proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection "Upgrade";
     proxy_set_header Host $host;
     proxy_set_header Access-Control-Allow-Origin "*";
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;proxy_set_header Host $host;
     proxy_set_header Host $http_host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Scheme $scheme;
     proxy_set_header X-Forwarded-Proto $scheme;
     proxy_redirect off;
     add_header Access-Control-Allow-Origin *;
 add_header Access-Control-Allow-Methods GET,POST,OPTIONS,PUT;
 add_header Access-Control-Allow-Headers Origin,X-Requested-With,Content-Type,Accept,Authorization;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

server {
    listen 3002 ssl;
    server_name localhost2;
    ssl_certificate  /etc/ssl/certificate.crt;
    ssl_certificate_key  /etc/ssl/private.key;

    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 4000 ssl;
    server_name localhost3;
    ssl_certificate  /etc/ssl/certificate.crt;
    ssl_certificate_key  /etc/ssl/private.key;

    location / {
        proxy_pass http://localhost:4001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}